为了扩展公司业务，领导提出应该有自己的小程序(店盟服务)。提出需求后，团队设计小程序功能。确定好功能后，开始开发。由于在前后端分离开发时早已部署好了接口服务器，后端接口开发十分顺利。

拿到UI给出的设计稿后，开始读小程序的开发文档，读到WXSS样式时，发现小程序在底层支持新的尺寸单位rpx，免去了开发时px换算的烦恼，不用做自适应方案设计了。小程序底层支持ES6转ES5，可以大胆用ES6开发，免去了用babel做语法转换，不用安装babel-polyfill可以使用Promise等新的全局变量。在开发过程中紧密和后端开发人员配合调试接口，保证项目按时上线。

开发完小程序后做了几点总结: 独木不成林，个人的力量始终是渺小的，只有团队合作才能完成好工作，切勿发扬个人主义精神；在条件允许的前提下，尽量用新的技术标准如用ES6和前端框架来开发，这样会大大提高开发效率；阅读文档的重要性，阅读技术文档是一个程序员的基本素养之一，在开发过程中难免会遇到各种坑，在遇到问题时首先看技术文档，实在解决不了把问题抛在社区中，问题总有办法解决的...

公司的主要业务是会员管理系统，必须有一套完整的会员系统。在这个项目中根据领导提出的需求和团队成员一起设计会员系统应该有哪些功能以及可以通过什么方式成为店盟会员等。最终确定的产品功能有支持会员储值、计次，计时消费、支持会员消费流水管理、支持会员一卡多店消费等。

确定好后产品功能后，开始做技术选型，在做技术选型时团队成员发生了分歧，考虑到业务的复杂度，我提出用vue 1.x进行前后端分离开发。后端开发人员提出由于开发周期短，公司还没有过前后端分离开发的经验，如果采用前后端分离开发必须重新部署接口服务时间来不及，应该还是以后端开发为主。最后讨论还是用以前的开发方式，先把产品开发完放在微信公众号上，上线后在重构项目，部署单独接口服务器，进行前后端分离开发。


公司的主要业务是会员管理系统，必须有一套完整的会员系统。在已有的功能基础上根据领导提出的需求和团队成员一起设计会员系统应该新增哪些功能。最终确定的新增功能有支持会员储值、计次，计时消费、支持会员消费流水管理、支持会员一卡多店消费等。

确定功能后，开始做技术选型，在做技术选型时团队成员发生了分歧，考虑到业务的复杂度，我提出用vue 1.x进行前后端分离开发。后端开发人员提出由于开发周期短，公司还没有过前后端分离开发的经验，如果采用前后端分离开发必须重新部署接口服务时间来不及，应该还是以后端开发为主。最后讨论还是用前后端混合开发方式，先把产品开发完放在微信公众号上，上线后在重构项目，部署单独接口服务器，进行前后端分离开发。


1、负责移动端和PC端页面构建和设计稿还原;
2、负责相关产品的需求以及前端程序的实现，提供合理的前端架构，根据项目的不同进行技术选型和完成交互设计;
3、与产品、后端开发人员保持良好沟通，快速理解、消化各方需求，落实为具体的开发工作;
4、负责搭建前端框架，编写组件，进行模块化开发，实现前后端分离;
5、公司主要业务是会员管理系统和移动支付，有自己的微信公众平台及小程序，配合后端开发人员完成微信公众网页及小程序(店盟服务)的开发;
6、和node开发人员使用express,koa2后端框架进行服务器端开发;  
7、大学学的是和设计相关的，所以比较熟悉Photoshop等平面软件，提供一些建议给UI设计人


1、负责移动端和PC端页面构建和设计稿还原；
2、配合后端开发人员完成微信公众网页及小程序(店盟服务)的开发;
3、和node开发人员使用express框架进行服务器端开发;  


1、负责产品项目中涉及到的前端页面设计与制作，交互效果实现工作;
2、使用html5+css3负责前端页面的开发，并兼容各大浏览器;
3、运用js、jquery等技术为静态页面添加交互效果，配合后端技术人员实现交互。

总结: 个人的力量始终是渺小的，只有团队合作才能完成好工作；在条件允许的前提下，尽量用新的技术标准如用ES6和前端框架来开发，这样会大大提高开发效率；阅读文档的重要性，阅读技术文档是一个程序员的基本素养之一，在开发过程中难免会遇到各种坑，在遇到问题时首先看技术文档，实在解决不了把问题抛在社区中，问题总有办法解决的













